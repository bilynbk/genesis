# $Id: Makefile.irix,v 1.2 2005/07/29 15:47:11 svitak Exp $
#
# GENESIS/XODUS : network simulator
#
#	Make tree altered June 1991
#	Last altered Fri Oct  4 13:50:27 PDT 1991
#	by David Bilitch
#
# Please select the correct configuration below
#
# ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~
# System:	SGI Irix 6.x
# Compiler:	SGI C compiler - different configurations, see below
# ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~

# MACHINE = irix
OS = SYSV

## Path to include files for X11 (or compatible) distribution
XINCLUDE = -I/usr/include
XLIB = .

## Standard compiler
CC = cc
CPP = /lib/cpp -P
LD = ld

## Libraries for UNIX archive format
## NOTE: There is typically no ranlib on Irix systems. 'ar -s' creates the
## symbol table used by ld.
#RANLIB = ranlib
#AR = ar

## Compiler-compiler to generate GENESIS scripting language
YACC = yacc
LEX = lex
LEXLIB = -ll
LIBS = $(LEXLIB) -lm

## Terminal output
TERMCAP = -lcurses
TERMOPT = -DTERMIO -DDONT_USE_SIGIO

# ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~
# System:	SGI Irix 6.5
# Compiler:	SGI C compiler (producing new-style 32 bit executables)
# ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~

## The settings in this section are for N32 mode, the SGI "new" style
## 32-bit executables with N64 calling conventions and optimizations.
## They are current as of IRIX 6.5.3 and 6.5.8, tested on R10000-based
## Octane and O2 systems using the MIPSPro compiler version 7.30.
## There is a separate section below for 64-bit executables.

CFLAGS = -n32 -xansi -signed -O2 -DBIGENDIAN -OPT:Olimit=6000 $(IRIX_WARN)

IRIX_HACK = -w
LDFLAGS = -n32 -L/usr/lib32 -LD_MSG:off=85,134

## UNCOMMENT ONLY ONE OF THE FOLLOWING.
##
## If you are using IRIX >= 6.5.8, uncomment the next IRIX_WARN line:
##
# IRIX_WARN = -woff 1116,1552,1174,3434
##
## If you are using IRIX above 6.5.3 but less than 6.5.8, use the following:
##
# IRIX_WARN = -woff 1048,1116,1155,3170
##
## Explanation of the above: the CFLAGS and LDFLAGS settings
## purposefully disable reporting of certain kinds of warnings via the
## -woff option, because they are either silly warnings, or else things
## we cannot fix because they are in code imported from elsewhere (e.g.,
## netCDF), or else things that could be fixed but are not worth it at
## this time.  Yes, we know this is poor practice, but given limited
## resources, it's the best we can do.

## end SGI IRIX 6.5.x new-style 32-bit

# ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~
# System:	SGI Irix 6.5
# Compiler:	SGI C compiler (producing old-style 32-bit executables)
# ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~

## The settings in this section are for O32 mode, the SGI "old" style
## 32-bit executables.  They are current as of IRIX 6.5.3 and 6.5.8,
## tested on R10000-based Octane and O2 systems.

# CFLAGS = -o32 -xansi -signed -O2 -DBIGENDIAN -Olimit 6000 -Wl,-woff,85 -Wl,-woff,134
# IRIX_HACK = -w
# LDFLAGS = -o32 -cckr

## end SGI IRIX 6.5.x old-style 32-bit

# ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~
# System:	SGI Irix 6.5
# Compiler:	SGI C compiler (producing 64-bit executables)
# ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~

## This configuration is known to work for (and has only been tested on)
## SGI Origin 2000 running IRIX 6.5.10 with MIPSPro compiler 7.3.1.1m (or .3m), 
## gcc 2.95, or gcc 3.0.4. It may work for other architectures and OS versions, but the
## GENESIS maintainers do not have experience with other combinations.
## If using the MIPSPro compiler, you might need to change "-xansi" to "-cckr"
## in the CFLAGS line below.  Please mail genesis@genesis-sim.org if you use
## these settings and tell us about it. If these settings do not work for you,
## the "new-style 32-bit binary" settings above should still work (but more
## slowly).
##

# XLIB=/usr/lib64

# CFLAGS=-xansi -mips4 -64 -LNO -G 0 -r10000 -O2 -Ddecalpha -DBIGENDIAN -DLONGWORDS -OPT:Olimit=6000 $(IRIX_WARN)
# IRIX_HACK =-w
# LDFLAGS=-mips4 -64 -G 0


## It appears safest to use bison and flex instead of yacc and lex.
## See the README file for information on obtaining bison and flex.
## However, many IRIX 6.5 systems have flex, but do not have the library file
## libfl.a.  The line 'LEXLIB=-ll' below tells the the compiler to look for
## the file libl.a, instead.  If it should turn out that you have libfl.a, but
## not libl.a, change the line to read  'LEXLIB=-lfl'.
## If you want to try yacc and lex, change these defines to be like
## those in the 32 bit section.

# YACC=bison -y
# LEX=flex -l
# LEXLIB=-ll
# LIBS= $(LEXLIB) -lm

# TERMCAP=
# TERMOPT=-DPLAINTERM

# IRIX_WARN = -woff 1116,1168,1174,1177,1552
##
## Explanation of the above: the CFLAGS and LDFLAGS settings
## purposefully disable reporting of certain kinds of warnings via the
## -woff option, because they are either silly warnings, or else things
## we cannot fix because they are in code imported from elsewhere (e.g.,
## netCDF), or else things that could be fixed but are not worth it at
## this time.  Yes, we know this is poor practice, but given limited
## resources, it's the best we can do.

## end SGI IRIX 6.x 64-bit

# ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~
# System:	SGI Irix 6.4
# Compiler:	SGI C compiler (producing old-style 32-bit executables)
# ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~

## This configuration has not been tested by the Caltech GENESIS group since
## the introduction of IRIX 6.5.  If you have a 6.4 system and encounter
## trouble here, please mail genesis@genesis-sim.org.
##
## Please uncomment all lines up to "## end ..." to re-define the values
## appropriately, as 6.4 needs slightly different parameters

#CC=cc -32
#CFLAGS=-cckr -O -G 0 -DBIGENDIAN
#IRIX_HACK = -w

#LD=ld -32
#LDFLAGS= -O

#TERMCAP=
#TERMOPT=-DPLAINTERM

## end SGI IRIX 6.4 32-bit

# ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~
# System:	SGI IRIX 4.x
# Compiler:	SGI C compiler
# ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~  ~

# MACHINE=irix
# OS=SYSV

# XINCLUDE=-I/usr/include
# XLIB=/usr/lib

# CC=cc -cckr -G 5
# CPP=/lib/cpp -P
# CFLAGS=-O -DBIGENDIAN
# IRIX_HACK = -w
# LD=ld
# LDFLAGS=-G 5

# RANLIB=ranlib
# AR=ar

# YACC=yacc
# LEX=lex
# LEXLIB=-ll
# LIBS= $(LEXLIB) -lm

# TERMCAP=
# TERMOPT=-DPLAINTERM

## end SGI IRIX 4.x

LLIBS		=	$(LIBS) $(EXTRALIBS)
CFLAGS		=	$(CFLAGS_IN)

##
## sprng may need different flags in order to compile.
## In general, it can be optimized at a higher level than genesis code.
## Be sure BIGENDIAN is defined for this arch.
##
RNG_CFLAGS = $(CFLAGS_IN)

## run common Makefile
include Makefile.BASE


#
# $Log: Makefile.irix,v $
#
# Revision 1.5 2013/05/25 15:01:00  janpi
# Rewrote Build system, changed OSX target to 'Darwin' (from MaxOSXDarwin)
#
# Revision 1.2  2005/07/29 15:47:11  svitak
# Relocated common targets to Makefile.BASE. Some architectures were making
# in sys and shell, then all the subdirs. If you find this needs to be done
# for your architecture, please submit a bug report at:
# http://sourceforge.net/tracker/?func=add&group_id=141069&atid=748364
#
# Eliminated use of COPT in favor of CFLAGS_IN.
#
# Added architecture-dependent flags for compilation of SPRNG libraries to
# corresponding Makefiles.
#
# Changed INSTALL to INSTALLDIR to avoid confusion with INSTALL executable.
#
# Added TEST variable to allow different location of 'test' executable.
#
# Made TMPDIR setting more prominent.
#
# Updated instructions for making genesis.
#
# Revision 1.1.1.1  2005/06/14 04:38:27  svitak
# Import from snapshot of CalTech CVS tree of June 8, 2005
#
# Revision 1.26  2000/07/12 06:11:03  mhucka
# Forgot to replace a leading '@' to quiet a shell command.
#
# Revision 1.25  2000/07/09 09:29:10  mhucka
# Stupid IRIX /bin/test doesn't understand the -ef option, so had to rewrite
# the copydirs code to work around it.
#
# Revision 1.24  2000/06/12 03:57:14  mhucka
# Added an awful, bletcherous hack.  The variable IRIX_HACK is used in only two
# places, ss/Makefile and convert/Makefile, to pass the -w option to the IRIX
# cc compiler when y.tab.c is being compiled.  The reason is to avoid getting
# two hundred warnings under the IRIX cc compiler.  The warnings are generated
# for things like "statement is unreachable", but it's in code (y.tab.c) that's
# generated by lex, so there's nothing we can do.  I wish there was a cleaner
# way of supplying a flag selectively like this, without resorting to passing
# IRIX_HACK all over the place just for this one thing.
#
# Revision 1.23  2000/06/07 05:23:27  mhucka
# 1) Instead of MACH_DEP_FLAGS (which no longer seems to serve a purpose),
#    now using LDFLAGS.
# 2) Cleaned up a lot of the diagnostic print statements.
#
# Revision 1.22  2000/05/29 02:10:39  mhucka
# Fixed "make install" directive, which was actually screwed up.
#
# Revision 1.21  2000/05/26 23:39:29  mhucka
# Added INSTALLBIN.
#
# Revision 1.20  2000/05/26 22:19:48  mhucka
# Need to copy Doc, src and other dirs during "make install".
#
# Revision 1.19  2000/05/19 20:08:48  mhucka
# Need to pass value of SPRNG_LIB to make clean.
#
# Revision 1.18  2000/05/19 18:16:27  mhucka
# Made it pass value of MACHINE to submakefiles during "make clean".
#
# Revision 1.17  2000/04/24 07:10:43  mhucka
# Added another library parameter to handle things like the SPRNG library.
#
# Revision 1.16  1999/12/02 00:42:24  mhucka
# Moved the setting of TERMCAP and TERMOPT to the top-level Makefile,
# because at least in one case (Linux), users may have to customize the
# value depending on which version of Linux they're running.  We want to
# avoid having users have to modify the Makefile.MACHINE files.
#
# Revision 1.15  1999/10/17 23:58:35  mhucka
# Removed XVERSION symbol definition.  It turns out it's not used anywhere.
#
# Revision 1.14  1999/08/22 04:08:35  mhucka
# I found it necessary to include the CFLAGS for the links rules for
# genesis/nxgenesis/mingenesis, for gcc installed in a nonstandard location.
# The CFLAGS are needed to let you specify things like -L flags to the linker.
# (We should perhaps consider using a separate LFLAGS macro for the link step.)
#
# Revision 1.13  1998/01/15 03:17:37  venkat
# Included-the-DISKIOSUBDIR-macro-to-be-passed-down-to-lower-level-subdirectories
#
# Revision 1.12  1997/06/13  00:36:54  dhb
# Added @ to suppress command echoing of echo commands
#
# Revision 1.11  1996/06/18 07:07:08  dhb
# Support for AR macro.
#
# Revision 1.10  1995/11/02  00:06:17  dhb
# Changes to pass down TMPDIR macro to sub makes and the LEXLIB macro
# to the code_g make.
#
# Revision 1.9  1995/04/29  01:11:24  dhb
# Added handling of YACC, LEX and LEXLIB macros to define the
# yacc and lex programs and the lex libraries respectively.
#
# Revision 1.8  1994/12/20  23:37:43  dhb
# Fixed XINCLUDE handling.
#
# Revision 1.7  1994/12/06  01:45:40  dhb
# Added the XINCLUDE macro
#
# Revision 1.6  1994/04/14  14:51:50  dhb
# Now passes RANLIB macro down in install targets
#
# Revision 1.5  1994/04/04  21:25:45  dhb
# Added RANLIB macro to handle systems without ranlib.
#
# Moved compiler depended macro settings to src/Makefile.
#
# Revision 1.4  1994/03/22  23:56:31  dhb
# Changed codeg target to code_g (the actual program name).
#
# Revision 1.3  1994/03/21  18:25:36  dhb
# Changes to make code_g program
#
# Revision 1.2  1993/10/19  18:53:27  dhb
# RCS changes and libsh --> ./libsh
#
#


